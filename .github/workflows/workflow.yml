name: Terraform Pipeline

on:
  workflow_dispatch:
    inputs:
      organization_code:
        description: 'Organization Code'
        required: true
        default: 'mf'
      lob_code:
        description: 'lob Code'
        required: true
        default: 'daia'
      app_code:
        description: 'Application Code'
        required: true
        default: 'azraaa'
      application_name:
        description: 'Application Name'
        required: true
        default: 'sampleapp'
      application_platform:
        description: 'Application Platform'
        required: true
        default: 'reactjs'
      environments:
        description: "Environments JSON"
        required: true
        default: '[{"name":"Development","code":"dev","subscription_id":""},{"name":"QA","code":"qat","subscription_id":""}]'
      # Add more as needed

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Use workflow input, fallback to secrets/defaults if missing
      ORGANIZATION_CODE: ${{ github.event.inputs.organization_code }}
      LOB_CODE: ${{ github.event.inputs.lob_code }}
      APP_CODE: ${{ github.event.inputs.app_code }}
      APP_NAME: ${{ github.event.inputs.application_name }}
      APP_PLATFORM: ${{ github.event.inputs.application_platform }}
      APP_ENVT: ${{ github.event.inputs.environments }}

      # ... (other secrets and envs as above)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: (Optional) Load extra config from input.json
        run: |
          if [ -f input.json ]; then
            echo "input.json present"
          else
            echo '{}' > input.json
          fi

      - name: Generate terraform.tfvars from template, env, and input.json
        run: python templatize.py

      - name: Display generated tfvars (debug)
        run: cat terraform.tfvars
